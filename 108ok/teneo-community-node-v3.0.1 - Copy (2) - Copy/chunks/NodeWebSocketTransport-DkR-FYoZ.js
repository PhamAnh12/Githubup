var u=Object.defineProperty;var c=s=>{throw TypeError(s)};var g=(s,e,t)=>e in s?u(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t;var i=(s,e,t)=>g(s,typeof e!="symbol"?e+"":e,t),d=(s,e,t)=>e.has(s)||c("Cannot "+t);var r=(s,e,t)=>(d(s,e,"read from private field"),t?t.call(s):e.get(s)),m=(s,e,t)=>e.has(s)?c("Cannot add the same private member more than once"):e instanceof WeakSet?e.add(s):e.set(s,t),h=(s,e,t,n)=>(d(s,e,"write to private field"),n?n.call(s,t):e.set(s,t),t);import w from"ws";import{p as v}from"../background.js";import"./general.config-osRriZOx.js";import"./constants-BKXh9xlg.js";import"./_virtual_wxt-plugins-CYLfT0K8.js";/**
 * @license
 * Copyright 2018 Google Inc.
 * SPDX-License-Identifier: Apache-2.0
 */var o;const l=class l{constructor(e){m(this,o);i(this,"onmessage");i(this,"onclose");h(this,o,e),r(this,o).addEventListener("message",t=>{this.onmessage&&this.onmessage.call(null,t.data)}),r(this,o).addEventListener("close",()=>{this.onclose&&this.onclose.call(null)}),r(this,o).addEventListener("error",()=>{})}static create(e,t){return new Promise((n,f)=>{const a=new w(e,[],{followRedirects:!0,perMessageDeflate:!1,allowSynchronousEvents:!1,maxPayload:268435456,headers:{"User-Agent":`Puppeteer ${v}`,...t}});a.addEventListener("open",()=>n(new l(a))),a.addEventListener("error",f)})}send(e){r(this,o).send(e)}close(){r(this,o).close()}};o=new WeakMap;let p=l;export{p as NodeWebSocketTransport};
